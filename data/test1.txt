def2
2
A
*
B
*
implies
?x:(A). (B)
*
edef2

def2
3
A
*
B
*
u
?x:(A).(B)
impliesIn
u
implies[(A),(B)]
edef2

def2
4
A
*
B
*
u
implies[(A),(B)]
v
A
impliesIn
%(u)(v)
B
edef2

def2
0
contra
?A:(*).(A)
*
edef2

def2
3
A
*
u
A
v
implies[(A),(contra[])]
contraIn
%(v)(u)
contra[]
edef2

def2
2
A
*
u
contra[]
contraEl
%(u)(A)
A
edef2

def2
1
A
*
not
implies[(A),(contra[])]
*
edef2

def2
2
A
*
u
?x:(A).(contra[])
notIn
u
not[(A)]
edef2

def2
3
A
*
u
not[(A)]
v
A
notEl
%(u)(v)
contra[]
edef2

def2
3
A
*
u
A
v
not[(A)]
a1
notEl[(A),(u),(v)]
contra[]
edef2

def2
2
A
*
u
A
a2
notIn[(not[(A)]),($v:(not[(A)]).(a1[(A),(u),(v)]))]
not[(not[(A)])]
edef2

def2
1
A
*
a3
impliesIn[(A),(not[(not[(A)])]),($u:(A).(a2[(A),(u)]))]
implies[(A),(not[(not[(A)])])]
edef2
